import parseGame, { checkBoard, emojiToWord } from "../parse-game";
import { setFailed } from "@actions/core";

jest.mock("@actions/core");

describe("parseGame", () => {
  test("works", () => {
    expect(
      parseGame(
        "Wordle 210 3/6",
        `ğŸŸ©â¬›â¬›â¬›â¬›
â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨
ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©`
      )
    ).toEqual({
      board: ["ğŸŸ©â¬›â¬›â¬›â¬›", "â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨", "ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©"],
      boardWords: [
        "yes no no no no",
        "no no almost yes almost",
        "yes yes yes yes yes",
      ],
      gameNumber: 210,
      score: 3,
      won: true,
    });
    expect(
      parseGame(
        "Wordle 208 X/6",
        `â¬›â¬›â¬›â¬›ğŸŸ¨
â¬›ğŸŸ¨â¬›â¬›â¬›
â¬›ğŸŸ¨â¬›ğŸŸ©â¬›
ğŸŸ©â¬›â¬›â¬›ğŸŸ¨
ğŸŸ©â¬›â¬›ğŸŸ©â¬›
ğŸŸ©â¬›â¬›ğŸŸ©â¬›`
      )
    ).toEqual({
      board: [
        "â¬›â¬›â¬›â¬›ğŸŸ¨",
        "â¬›ğŸŸ¨â¬›â¬›â¬›",
        "â¬›ğŸŸ¨â¬›ğŸŸ©â¬›",
        "ğŸŸ©â¬›â¬›â¬›ğŸŸ¨",
        "ğŸŸ©â¬›â¬›ğŸŸ©â¬›",
        "ğŸŸ©â¬›â¬›ğŸŸ©â¬›",
      ],
      boardWords: [
        "no no no no almost",
        "no almost no no no",
        "no almost no yes no",
        "yes no no no almost",
        "yes no no yes no",
        "yes no no yes no",
      ],
      gameNumber: 208,
      score: "X",
      won: false,
    });
    expect(
      parseGame(
        "Wordle 209 6/6",
        `Wordle 209 6/6

ğŸŸ©â¬›ğŸŸ¨â¬›ğŸŸ¨
ğŸŸ©ğŸŸ©â¬›â¬›â¬›
ğŸŸ©ğŸŸ©â¬›â¬›â¬›
ğŸŸ©â¬›ğŸŸ©â¬›â¬›
ğŸŸ©ğŸŸ©ğŸŸ©â¬›â¬›
ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©
`
      )
    ).toEqual({
      board: [
        "ğŸŸ©â¬›ğŸŸ¨â¬›ğŸŸ¨",
        "ğŸŸ©ğŸŸ©â¬›â¬›â¬›",
        "ğŸŸ©ğŸŸ©â¬›â¬›â¬›",
        "ğŸŸ©â¬›ğŸŸ©â¬›â¬›",
        "ğŸŸ©ğŸŸ©ğŸŸ©â¬›â¬›",
        "ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©",
      ],
      boardWords: [
        "yes no almost no almost",
        "yes yes no no no",
        "yes yes no no no",
        "yes no yes no no",
        "yes yes yes no no",
        "yes yes yes yes yes",
      ],
      gameNumber: 209,
      score: 6,
      won: true,
    });
  });
});

describe("checkBoard", () => {
  test("works", () => {
    expect(
      checkBoard(`ğŸŸ©â¬›â¬›â¬›â¬›
â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨
ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©`)
    ).toEqual(["ğŸŸ©â¬›â¬›â¬›â¬›", "â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨", "ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©"]);
  });
  test("error, no value", () => {
    checkBoard(``);
    expect(setFailed).toHaveBeenCalledWith("Wordle board is invalid: []");
  });
  test("error, too many rows", () => {
    checkBoard(`ğŸŸ©â¬›â¬›â¬›â¬›
ğŸŸ©â¬›â¬›â¬›â¬›
ğŸŸ©â¬›â¬›â¬›â¬›
ğŸŸ©â¬›â¬›â¬›â¬›
ğŸŸ©â¬›â¬›â¬›â¬›
â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨
ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©`);
    expect(setFailed).toHaveBeenCalledWith(
      'Wordle board is invalid: ["ğŸŸ©â¬›â¬›â¬›â¬›","ğŸŸ©â¬›â¬›â¬›â¬›","ğŸŸ©â¬›â¬›â¬›â¬›","ğŸŸ©â¬›â¬›â¬›â¬›","ğŸŸ©â¬›â¬›â¬›â¬›","â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨","ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©"]'
    );
  });
});

test("emojiToWord", () => {
  expect(emojiToWord("ğŸŸ©â¬›â¬›â¬›â¬›")).toEqual("yes no no no no");
  expect(emojiToWord("ğŸŸ¦â¬œâ¬œâ¬œâ¬œ")).toEqual("yes no no no no");
  expect(emojiToWord("ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©")).toEqual("yes yes yes yes yes");
  expect(emojiToWord("ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦ğŸŸ¦")).toEqual("yes yes yes yes yes");
  expect(emojiToWord("â¬›â¬›â¬›â¬›â¬›")).toEqual("no no no no no");
  expect(emojiToWord("â¬œâ¬œâ¬œâ¬œâ¬œ")).toEqual("no no no no no");
  expect(emojiToWord("â¬›â¬›ğŸŸ¨ğŸŸ©ğŸŸ¨")).toEqual("no no almost yes almost");
  expect(emojiToWord("â¬œâ¬œğŸŸ§ğŸŸ¦ğŸŸ§")).toEqual("no no almost yes almost");
  expect(emojiToWord("ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨ğŸŸ¨")).toEqual(
    "almost almost almost almost almost"
  );
  expect(emojiToWord("ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§")).toEqual(
    "almost almost almost almost almost"
  );
});
